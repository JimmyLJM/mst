## 模式定义和特点

将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类能一起工作。
适配器模式包括3种形式：类适配器模式、对象适配器模式、接口适配器模式


## 结构

- 目标（Target）接口：当前系统业务所期待的接口，它可以是抽象类或接口
- 适配者（Adaptee）类：它是被访问和适配的现存组件库中的组件接口。
- 适配器（Adapter）类：它是一个转换器，通过继承或引用适配者的对象，
把适配者接口转换成目标接口，让客户按目标接口的格式访问适配者



## 类适配器模式
通过继承方式实现适配器和源之间的关联


## 对象适配器模式
适配器持有源对象


## 接口适配器模式
接口适配器模式（缺省适配模式）的思想是，为一个接口提供缺省实现，
这样子类可以从这个缺省实现进行扩展，而不必从原有接口进行扩展。

通过声明一个抽象类来试下源接口，提供确认接口实现，
缺点是需要使用继承来使用接口定义的方法


## 类适配器与对象适配器的区别：
类适配器使用的是继承的方式，直接继承了Adaptee，所以无法对Adaptee的子类进行适配。  
对象适配器使用的是组合的方式，·所以Adaptee及其子孙类都可以被适配。
另外，对象适配器对于增加一些新行为非常方便，而且新增加的行为同时适用于所有的源。  
基于组合/聚合优于继承的原则，使用对象适配器是更好的选择。
但具体问题应该具体分析，某些情况可能使用类适配器会适合，最适合的才是最好的。

















